/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-catalogs",
factory: function (require) {
var plugin=(()=>{var p=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var I=Object.prototype.hasOwnProperty;var h=(o=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(o,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):o)(function(o){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+o+'" is not supported')});var _=(o,t)=>{for(var n in t)p(o,n,{get:t[n],enumerable:!0})},L=(o,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of m(t))!I.call(o,e)&&e!==n&&p(o,e,{get:()=>t[e],enumerable:!(r=C(t,e))||r.enumerable});return o};var w=o=>L(p({},"__esModule",{value:!0}),o);var y={};_(y,{default:()=>N});var g=h("@yarnpkg/core");var A="YARN__PLUGIN__CATALOG__DEFAULT__GROUP",a=class extends Error{constructor(n,r){super(n);this.code=r;this.name="CatalogConfigurationError"}static{this.FILE_NOT_FOUND="FILE_NOT_FOUND"}static{this.INVALID_FORMAT="INVALID_FORMAT"}static{this.INVALID_ALIAS="INVALID_ALIAS"}},l=class{constructor(){this.configCache=new Map}async readConfiguration(t){let r=t.cwd,e=this.configCache.get(r);if(e)return e;let c=t.configuration.get("catalogs"),s=Object.entries(c).reduce((i,[f,u])=>(typeof u=="string"?i[A]={...i[A]||{},[f]:u}:i[f]=u,i),{});if(!this.isValidConfiguration(s))throw new a("Invalid catalogs configuration format. Expected structure: { [alias: string]: { [packageName: string]: string } }",a.INVALID_FORMAT);return this.configCache.set(r,s),s}async getRange(t,n,r){let e=await this.readConfiguration(t),c=n.length===0?A:n,s=e[c];if(!s)throw new a(`Alias "${c}" not found in catalogs.yml`,a.INVALID_ALIAS);let i=s[r];if(!i)throw new a(`Package "${r}" not found in alias "${c}"`,a.INVALID_ALIAS);return/^[^:]+:/.test(i)?i:`${t.configuration.get("defaultProtocol")}${i}`}clearCache(t){this.configCache.delete(t)}isValidConfiguration(t){if(!t||typeof t!="object")return!1;for(let[n,r]of Object.entries(t)){if(!r||typeof r!="object")return!1;for(let e of Object.values(r))if(typeof e!="string")return!1}return!0}};var d="catalog:",D=new l,O={configuration:{catalogs:{description:"Define dependency version ranges as reusable constants across your project.",type:g.SettingsType.ANY,default:{}}},hooks:{reduceDependency:async(o,t,...n)=>{if(!o.range.startsWith(d))return o;try{let r=o.range.slice(d.length),e=g.structUtils.stringifyIdent(o),c=await D.getRange(t,r,e),s=g.structUtils.makeDescriptor(g.structUtils.makeIdent(o.scope,o.name),c),i=await t.configuration.reduceHook(f=>f.reduceDependency,s,t,...n);return i!==s?i:s}catch(r){throw r instanceof a?new Error(`Failed to resolve ${g.structUtils.stringifyDescriptor(o)}: ${r.message}`):r}}}},N=O;return w(y);})();
return plugin;
}
};
